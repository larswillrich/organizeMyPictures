Sending build context to Docker daemon  79.44MB
Step 1/8 : FROM python:buster
 ---> b55669b4130e
Step 2/8 : COPY ./app /app
 ---> ef4ba9a2d65a
Step 3/8 : RUN pip install requests
 ---> Running in b4a518e6eb63
Collecting requests
  Downloading requests-2.23.0-py2.py3-none-any.whl (58 kB)
Collecting idna<3,>=2.5
  Downloading idna-2.9-py2.py3-none-any.whl (58 kB)
Collecting certifi>=2017.4.17
  Downloading certifi-2020.4.5.1-py2.py3-none-any.whl (157 kB)
Collecting urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1
  Downloading urllib3-1.25.9-py2.py3-none-any.whl (126 kB)
Collecting chardet<4,>=3.0.2
  Downloading chardet-3.0.4-py2.py3-none-any.whl (133 kB)
Installing collected packages: idna, certifi, urllib3, chardet, requests
Successfully installed certifi-2020.4.5.1 chardet-3.0.4 idna-2.9 requests-2.23.0 urllib3-1.25.9
Removing intermediate container b4a518e6eb63
 ---> 2d2440d3c605
Step 4/8 : RUN pip install Pillow
 ---> Running in 376c39dc0ae7
Collecting Pillow
  Downloading Pillow-7.1.1-cp38-cp38-manylinux1_x86_64.whl (2.1 MB)
Installing collected packages: Pillow
Successfully installed Pillow-7.1.1
Removing intermediate container 376c39dc0ae7
 ---> de8f8eb9d79f
Step 5/8 : RUN pip install pickledb
 ---> Running in 2fe159e47a69
Collecting pickledb
  Downloading pickleDB-0.9.2.tar.gz (3.7 kB)
Building wheels for collected packages: pickledb
  Building wheel for pickledb (setup.py): started
  Building wheel for pickledb (setup.py): finished with status 'done'
  Created wheel for pickledb: filename=pickleDB-0.9.2-py3-none-any.whl size=4269 sha256=f0fbaa6f96e8fcc0f6df65e8e8771a8fa84dd4349e4ed2fe189c0ca657f98b60
  Stored in directory: /root/.cache/pip/wheels/88/91/d4/ef2e6a46ad2bc41f9cfad35fa2db5b34357a5e4da67c385ffa
Successfully built pickledb
Installing collected packages: pickledb
Successfully installed pickledb-0.9.2
Removing intermediate container 2fe159e47a69
 ---> d878524ba4b8
Step 6/8 : RUN pip install pandas
 ---> Running in 5ec84157835b
Collecting pandas
  Downloading pandas-1.0.3-cp38-cp38-manylinux1_x86_64.whl (10.0 MB)
Collecting numpy>=1.13.3
  Downloading numpy-1.18.2-cp38-cp38-manylinux1_x86_64.whl (20.6 MB)
Collecting pytz>=2017.2
  Downloading pytz-2019.3-py2.py3-none-any.whl (509 kB)
Collecting python-dateutil>=2.6.1
  Downloading python_dateutil-2.8.1-py2.py3-none-any.whl (227 kB)
Collecting six>=1.5
  Downloading six-1.14.0-py2.py3-none-any.whl (10 kB)
Installing collected packages: numpy, pytz, six, python-dateutil, pandas
Successfully installed numpy-1.18.2 pandas-1.0.3 python-dateutil-2.8.1 pytz-2019.3 six-1.14.0
Removing intermediate container 5ec84157835b
 ---> 674c9c851624
Step 7/8 : RUN pip install piexif
 ---> Running in 02b11609419e
Collecting piexif
  Downloading piexif-1.1.3-py2.py3-none-any.whl (20 kB)
Installing collected packages: piexif
Successfully installed piexif-1.1.3
Removing intermediate container 02b11609419e
 ---> f22357a98a95
Step 8/8 : CMD python /app/main.py
 ---> Running in 0af6c026810e
Removing intermediate container 0af6c026810e
 ---> 145dc1cdef4f
Successfully built 145dc1cdef4f
Successfully tagged pictureprogram:latest
Welcome to my picture Program. More then happy to have you here!
Did not find a files.csv, where may already some analysing data are already available. But seems not, so I will create one for you ...
collect files in .../app/picturesToProcess
0 files found
Start collecting metainformation


Start collecting GEO Information

I will show you some geotag statistics:
With Geo Informations: 0
WithOUT Geo Informations: 0

Here is an overview how many pictures have been taken somewhere:
{}

good bye ;)
